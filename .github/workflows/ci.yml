name: CI
on:
  pull_request_target:
    branches: ['main']
  push:
   branches: ['main']
   paths-ignore: ['**/*.md']
  workflow_dispatch:

jobs:
  jest:
    name: '[FE] Test'
    environment:
      name: ${{ github.ref_name }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - uses: actions/setup-node@main
        with:
          node-version: 20
      - name: Cache dependencies
        id: cache-nodemodules
        uses: actions/cache@main
        env:
          cache-name: cache-node-modules
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('frontend/yarn.lock') }}
          restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('frontend/yarn.lock') }}
      - name: Install dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        working-directory: frontend/
        run: yarn install --frozen-lockfile
      - name: Test
        working-directory: frontend/
        run: yarn test
  lint:
    name: '[FE] Lint'
    environment:
      name: ${{ github.ref_name }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - uses: actions/setup-node@main
        with:
          node-version: 20
      - name: Cache dependencies
        id: cache-nodemodules
        uses: actions/cache@main
        env:
          cache-name: cache-node-modules
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('frontend/yarn.lock') }}
          restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('frontend/yarn.lock') }}
      - name: Install dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        working-directory: frontend/
        run: yarn install --frozen-lockfile
      - name: Lint
        working-directory: frontend/
        run: yarn lint
  react-build:
    name: '[FE] Test Build'
    environment:
      name: ${{ github.ref_name }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - uses: actions/setup-node@main
        with:
          node-version: 20
      - name: Cache dependencies
        id: cache-nodemodules
        uses: actions/cache@main
        env:
          cache-name: cache-node-modules
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('frontend/yarn.lock') }}
          restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('frontend/yarn.lock') }}
      - name: Install dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        working-directory: frontend/
        run: yarn install --frozen-lockfile
      - name: Build
        working-directory: frontend/
        run: yarn build
  pytest:
    name: '[BE] Test'
    environment:
      name: ${{ github.ref_name }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - uses: actions/setup-python@main
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: '**/requirements.txt'
      - run: pip install -r backend/requirements.txt
      - name: Test
        working-directory: backend/
        run: pytest
